// <auto-generated />
using System;
using MeetAPaw.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeetAPaw.Data.Migrations
{
    [DbContext(typeof(MeetAPawDbContext))]
    [Migration("20230805083033_AddUserFirstNameAndLastName")]
    partial class AddUserFirstNameAndLastName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MeetAPaw.Data.Models.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AdopterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoreInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetForAdoptionId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.HasIndex("PetForAdoptionId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Adoptions");
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasDefaultValue("Test");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasDefaultValue("Testov");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Breed")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Blagoevgrad, Bulgaria",
                            Breed = "Chihuahua",
                            Color = "White",
                            DateOfBirth = new DateTime(2021, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Incredible dog with a lot of charm and cute vision.",
                            Gender = 0,
                            ImageUrl = "https://img.freepik.com/free-photo/chihuahua-cute-pet-lovely-animal-cap-concept_53876-65101.jpg?w=996&t=st=1688976253~exp=1688976853~hmac=6cf748d837e8c94d718ff937d582bd777adf75521da98181da10ab93681d35d5",
                            Name = "Vais",
                            OwnerId = new Guid("84520237-aa53-4477-a543-7b10c4fd91a1"),
                            PetTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Pleven, Bulgaria",
                            Breed = "Persian",
                            Color = "White",
                            DateOfBirth = new DateTime(2021, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The White Persian cat is an enchanting feline with a regal appearance and striking snowy fur. Its luxurious, long coat exudes elegance and grace, captivating admirers with its soft, fluffy texture. Known for their gentle and calm demeanor, these majestic cats make wonderful companions, offering affectionate companionship and a serene presence in any home. With their captivating blue or copper eyes and distinctive flat face, the White Persian cat is a true symbol of beauty and tranquility.",
                            Gender = 1,
                            ImageUrl = "https://img.freepik.com/premium-photo/exotic-shorthair-kitten-4-months-old-exotic-shorthair-kitten_191971-4692.jpg?w=740",
                            Name = "Joy",
                            OwnerId = new Guid("84520237-aa53-4477-a543-7b10c4fd91a1"),
                            PetTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Address = "Plovdiv, Bulgaria",
                            Breed = "Tame",
                            Color = "Blue",
                            DateOfBirth = new DateTime(2022, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The tame bird: A delightful, sociable companion with vibrant plumage, friendly nature, and joyful melodies. Perfect for brightening your days with its charming presence.",
                            Gender = 1,
                            ImageUrl = "https://img.freepik.com/premium-photo/budgie-blue-isolated-white-budgerigar-full-growth_157837-168.jpg?w=740",
                            Name = "Rebeka",
                            OwnerId = new Guid("ed65de1e-17b1-434a-a3a9-6d8700564e23"),
                            PetTypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            Address = "Varna, Bulgaria",
                            Breed = "Dutch",
                            Color = "White",
                            DateOfBirth = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The Dutch Rabbit is a small, adorable breed known for its distinctive white blaze on the face and a colored band around the body. It's a friendly and charming companion, perfect for families and rabbit enthusiasts.",
                            Gender = 0,
                            ImageUrl = "https://img.freepik.com/premium-photo/little-rabbit-white_21730-6890.jpg?w=740",
                            Name = "Yohan",
                            OwnerId = new Guid("ed65de1e-17b1-434a-a3a9-6d8700564e23"),
                            PetTypeId = 4
                        });
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.PetForAdoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AdopterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Breed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdopterId");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("ShelterId");

                    b.HasIndex("UserId");

                    b.ToTable("PetsForAdoption");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Breed = "Husky",
                            Color = "Black-White",
                            DateOfBirth = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The Husky is a majestic and energetic breed known for its striking wolf-like appearance, thick double coat, and captivating icy blue eyes. With a friendly and adventurous personality, these intelligent dogs make loyal companions and excel in activities like sledding and hiking.",
                            Gender = 0,
                            ImageUrl = "https://img.freepik.com/premium-photo/siberian-husky-9-months-old-sitting-front-white-background_191971-25663.jpg?w=740",
                            IsAdopted = false,
                            Name = "Murphy",
                            PetTypeId = 1,
                            ShelterId = 1,
                            UserId = new Guid("ed65de1e-17b1-434a-a3a9-6d8700564e23")
                        },
                        new
                        {
                            Id = 11,
                            Color = "Gray",
                            DateOfBirth = new DateTime(2022, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The cat, a graceful and independent creature, exudes a sense of mystery and elegance. With its soft fur, agile movements, and keen senses, the cat embodies a perfect balance of playfulness and poise.",
                            Gender = 0,
                            ImageUrl = "https://img.freepik.com/premium-photo/brazilian-shorthair-cat-1-year-old-cat-portrait-isolated_191971-1674.jpg?w=740",
                            IsAdopted = false,
                            Name = "Fris",
                            PetTypeId = 2,
                            ShelterId = 2,
                            UserId = new Guid("84520237-aa53-4477-a543-7b10c4fd91a1")
                        },
                        new
                        {
                            Id = 12,
                            Breed = "Siamese",
                            Color = "Black-Beige",
                            DateOfBirth = new DateTime(2021, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The Siamese cat is a beautiful and charismatic breed that stands out with its striking blue almond-shaped eyes and sleek, slender body. Their short, fine coat displays color points, with darker color on their ears, face, paws, and tail. ",
                            Gender = 1,
                            ImageUrl = "https://img.freepik.com/free-psd/beautiful-cat-portrait-isolated_23-2150186058.jpg?w=740&t=st=1690920220~exp=1690920820~hmac=4690269afdee8f82a5dc9cabaf3651fae42c36e5868a72e450ac64333b26222e",
                            IsAdopted = false,
                            Name = "Grina",
                            PetTypeId = 2,
                            ShelterId = 3,
                            UserId = new Guid("ed65de1e-17b1-434a-a3a9-6d8700564e23")
                        },
                        new
                        {
                            Id = 13,
                            Breed = "Cockatiel",
                            Color = "Multicolor",
                            DateOfBirth = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The parrot, a vibrant and intelligent avian species, boasts a kaleidoscope of colorful feathers that capture attention. ",
                            Gender = 1,
                            ImageUrl = "https://img.freepik.com/premium-photo/cockatiel-nymphicus-hollandicus-isolated_191971-11574.jpg?w=740",
                            IsAdopted = false,
                            Name = "Mora",
                            PetTypeId = 3,
                            ShelterId = 4,
                            UserId = new Guid("84520237-aa53-4477-a543-7b10c4fd91a1")
                        },
                        new
                        {
                            Id = 14,
                            Color = "White",
                            DateOfBirth = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The rabbit, a delightful and gentle creature, captivates with its cute, twitching nose and long, soft ears. With a variety of breeds showcasing different sizes and coat colors, rabbits are known for their curious and playful nature.",
                            Gender = 0,
                            ImageUrl = "https://img.freepik.com/free-photo/easter-bunny-colored-eggs-preparation-holiday-easter_1321-4393.jpg?w=740&t=st=1690920568~exp=1690921168~hmac=45b4830f0ec6d66b80711dc4afd42710bd3fc6c0a12a811716a044c26bdfc993",
                            IsAdopted = false,
                            Name = "Smith",
                            PetTypeId = 4,
                            ShelterId = 5,
                            UserId = new Guid("ed65de1e-17b1-434a-a3a9-6d8700564e23")
                        });
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PetsTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dog"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bird"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rabbit"
                        });
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Shelters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Blagoevgrad, Bulgaria",
                            Name = "MeetYourFriend"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Sofia, Bulgaria",
                            Name = "MakeTheAnimalsHappy"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Plovdiv, Bulgaria",
                            Name = "AnimalWorld"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Yambol, Bulgaria",
                            Name = "FindYourFluffyFriend"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Stara Zagora, Bulgaria",
                            Name = "EveryLifeMatters"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.Adoption", b =>
                {
                    b.HasOne("MeetAPaw.Data.Models.ApplicationUser", "Adopter")
                        .WithMany()
                        .HasForeignKey("AdopterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MeetAPaw.Data.Models.PetForAdoption", "PetForAdoption")
                        .WithMany()
                        .HasForeignKey("PetForAdoptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MeetAPaw.Data.Models.Shelter", "Shelter")
                        .WithMany("Adoptions")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("PetForAdoption");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.Pet", b =>
                {
                    b.HasOne("MeetAPaw.Data.Models.ApplicationUser", "Owner")
                        .WithMany("OwnedPets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeetAPaw.Data.Models.PetType", "PetType")
                        .WithMany("Pets")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.PetForAdoption", b =>
                {
                    b.HasOne("MeetAPaw.Data.Models.ApplicationUser", "Adopter")
                        .WithMany("PetsForAdoption")
                        .HasForeignKey("AdopterId");

                    b.HasOne("MeetAPaw.Data.Models.PetType", "PetType")
                        .WithMany()
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeetAPaw.Data.Models.Shelter", "Shelter")
                        .WithMany("PetsForAdoption")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeetAPaw.Data.Models.ApplicationUser", "User")
                        .WithMany("PetsForAdoptionAdded")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("PetType");

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MeetAPaw.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MeetAPaw.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeetAPaw.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MeetAPaw.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("OwnedPets");

                    b.Navigation("PetsForAdoption");

                    b.Navigation("PetsForAdoptionAdded");
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.PetType", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("MeetAPaw.Data.Models.Shelter", b =>
                {
                    b.Navigation("Adoptions");

                    b.Navigation("PetsForAdoption");
                });
#pragma warning restore 612, 618
        }
    }
}
