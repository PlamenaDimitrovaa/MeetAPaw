@model AllPetsForAdoptionQueryModel

@{
    ViewBag.Title = "Adopt Pet";
}

<form method="get">
    <div class="row text-center">
        <div class="form-group col-md-5 d-flex justify-content-around">
            <div class="form-group w-50">
                <label asp-for="PetType"></label>
                <select asp-for="PetType" class="form-control">
                    <option value="All">All</option>
                    @foreach (var petType in Model.PetsTypes)
                    {
                        <option value="@petType">@petType</option>
                    }
                </select>
            </div>

            <div class="form-group w-50">
                <label asp-for="PetsPerPage"></label>
                <select asp-for="PetsPerPage" class="form-control">
                    <option value="4">4</option>
                    <option value="8">8</option>
                    <option value="12">12</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-3 w-50">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="...">
        </div>

        <div class="col-md">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>


@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalPets /
        Model.PetsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Adopt"
           asp-action="Adopt"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.PetType"
           asp-route-searchTerm="@Model.SearchString"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Pets.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Adopt"
           asp-action="Adopt"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.PetType"
           asp-route-searchTerm="@Model.SearchString">>></a>
    </div>
</div>

@if (!Model.Pets.Any())
{
    <h2 class="text-center">No pets found by the given criteria!</h2>
}


<div class="row">
    <partial name="_AdoptionOfPetsPartialView" model="@Model.Pets" />
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
